h2. Component FileInventory

h4. Data Model

* *[#FileInventory] = container for recording information about a collection of related files*
** [#FileGroup] \[1..\*] = subset allow segregation of content and metadata files
*** [#FileManifestation] \[1..\*] = snapshot of a file's filesystem characteristics
**** [#FileSignature] \[1] = file fixity information
**** [#FileInstance] \[1..\*] = filepath and timestamp of any physical file having that signature


h4. Description

A structured container for recording information about a collection of related files.

The *scope* of the file collection depends on inventory type:
* _version_ = full set of data files comprising a digital object's version
* _additions_ = subset of data files that were newly added in the specified version
* _manifests_ = the fixity data for manifest files in the version's root folder
* _directory_ = set of files that were harvested from a filesystem directory

The inventory contains one or more [#FileGroup] subsets, which are most commonly used
to provide segregation of digital object version's _content_ and _metadata_ files.
Each group contains one or more [#FileManifestation] entities,
each of which represents a point-in-time snapshot of a given file's filesystem characteristics.
The fixity data for a file is stored in a [#FileSignature] element,
while the filename and modification data are stored in one or more [#FileInstance] elements.
(Copies of a given file may be present in multiple locations in a collection)


h4. XML Example
{code:lang=xml}
<?xml version="1.0" encoding="UTF-8"?>
<fileInventory type="version" objectId="druid:jq937jp0017" versionId="3" inventoryDatetime="2012-04-19T12:12:48Z" fileCount="10" byteCount="191362" blockCount="191">
  <fileGroup groupId="content" dataSource="/Users/rnanders/Code/Ruby/moab-versioning/spec/fixtures/data/jq937jp0017/v3/content" fileCount="5" byteCount="171902" blockCount="170">
    <file>
      <fileSignature size="32915" md5="c1c34634e2f18a354cd3e3e1574c3194" sha1="0616a0bd7927328c364b2ea0b4a79c507ce915ed"/>
      <fileInstance path="page-1.jpg" datetime="2012-03-26T15:35:15Z"/>
    </file>
    <file>
      <fileSignature size="39539" md5="fe6e3ffa1b02ced189db640f68da0cc2" sha1="43ced73681687bc8e6f483618f0dcff7665e0ba7"/>
      <fileInstance path="page-2.jpg" datetime="2012-03-26T15:58:53Z"/>
    </file>
    <file>
      <fileSignature size="39450" md5="82fc107c88446a3119a51a8663d1e955" sha1="d0857baa307a2e9efff42467b5abd4e1cf40fcd5"/>
      <fileInstance path="page-3.jpg" datetime="2012-03-26T15:23:36Z"/>
    </file>
    <file>
      <fileSignature size="19125" md5="a5099878de7e2e064432d6df44ca8827" sha1="c0ccac433cf02a6cee89c14f9ba6072a184447a2"/>
      <fileInstance path="page-4.jpg" datetime="2012-03-26T15:24:39Z"/>
    </file>
    <file>
      <fileSignature size="40873" md5="1a726cd7963bd6d3ceb10a8c353ec166" sha1="583220e0572640abcd3ddd97393d224e8053a6ad"/>
      <fileInstance path="title.jpg" datetime="2012-03-26T14:15:11Z"/>
    </file>
  </fileGroup>
  <fileGroup groupId="metadata" dataSource="/Users/rnanders/Code/Ruby/moab-versioning/spec/fixtures/data/jq937jp0017/v3/metadata" fileCount="5" byteCount="19460" blockCount="21">
    <file>
      <fileSignature size="1376" md5="44caefdbaf92f808c3fd27d693338c40" sha1="eb6f9c6539c90412bb4994d13311cc8dfe37c334"/>
      <fileInstance path="contentMetadata.xml" datetime="2012-03-28T14:04:24Z"/>
    </file>
    <file>
      <fileSignature size="3046" md5="a60bb487db6a1ceb5e0b5bb3cae2dfa2" sha1="edefc0e1d7cffd5bd3c7db6a393ab7632b70dc2d"/>
      <fileInstance path="descMetadata.xml" datetime="2012-03-26T17:43:49Z"/>
    </file>
    <file>
      <fileSignature size="12903" md5="ccb5bf2ae0c2c6ad0b89692fa1e10145" sha1="3badb0d06aef40f14e4664d2594c6060b9e9716b"/>
      <fileInstance path="identityMetadata.xml" datetime="2012-03-26T17:44:48Z"/>
    </file>
    <file>
      <fileSignature size="564" md5="17071e4607de4b272f3f06ec76be4c4a" sha1="b796a0b569bde53953ba0835bb47f4009f654349"/>
      <fileInstance path="provenanceMetadata.xml" datetime="2012-03-26T19:24:24Z"/>
    </file>
    <file>
      <fileSignature size="1571" md5="6ec3d879c5a91922889adc916d991db5" sha1="65c65bedf285fc87c1ea14646bc47e79762359d3"/>
      <fileInstance path="versionMetadata.xml" datetime="2012-04-11T18:43:15Z"/>
    </file>
  </fileGroup>
</fileInventory>
{code}

h4. XML Nodes
\\
||XML Element||Ruby Class||Inherits From||
|<fileInventory>|[#FileInventory]|Manifest|
\\
||XML Child Node||Ruby Attribute||Data Type||Description||
|@type|type|String|The type of inventory (version\\|additions\\|manifests\\|directory)|
|@objectId|digital_object_id|String|The digital object identifier (druid)|
|@versionId|version_id|Integer|The ordinal version number|
|@inventoryDatetime|inventory_datetime|Time|The datetime at which the inventory was created|
|@fileCount|file_count|Integer|The total number of data files in the inventory (dynamically calculated)|
|@byteCount|byte_count|Integer|The total size (in bytes) in all files of all files in the inventory (dynamically calculated)|
|@blockCount|block_count|Integer|The total disk usage (in 1 kB blocks) of all data files (estimating du -k result) (dynamically calculated)|
|<fileGroup> \[1..\*]|groups|Array<FileGroup>|The set of data groups comprising the version|
\\
||XML Element||Ruby Class||Inherits From||
|<fileGroup>|[#FileGroup]|Serializable|
\\
||XML Child Node||Ruby Attribute||Data Type||Description||
|@groupId|group_id|String|The name of the file group|
|@dataSource|data_source|String|The directory location or other source of this groups file data|
|@fileCount|file_count|Integer|The total number of data files (dynamically calculated)|
|@byteCount|byte_count|Integer|The total size (in bytes) of all data files (dynamically calculated)|
|@blockCount|block_count|Integer|\@blockCount The total disk usage (in 1 kB blocks) of all data files (estimating du -k result) (dynamically calculated)|
|<file> \[1..\*]|files|Array<FileManifestation>|The set of files comprising the group|
\\
||XML Element||Ruby Class||Inherits From||
|<file>|[#FileManifestation]|Serializable|
\\
||XML Child Node||Ruby Attribute||Data Type||Description||
|<fileSignature>|signature|FileSignature|The fixity data of the file instance|
|<fileInstance> \[1..\*]|instances|Array<FileInstance>|The location(s) of the file manifestation's file instances|
\\
||XML Element||Ruby Class||Inherits From||
|<fileSignature>|[#FileSignature]|Serializable|
\\
||XML Child Node||Ruby Attribute||Data Type||Description||
|@size|size|Integer|The size of the file in bytes|
|@md5|md5|String|The MD5 checksum value of the file|
|@sha1|sha1|String|The SHA1 checksum value of the file|
\\
||XML Element||Ruby Class||Inherits From||
|<fileInstance>|[#FileInstance]|Serializable|
\\
||XML Child Node||Ruby Attribute||Data Type||Description||
|@path|path|String|The id is the filename path, relative to the file group's base directory|
|@datetime|datetime|Time|gsub(/\n/,' ')|

{anchor:FileInventory}
h3. Class Moab::FileInventory

h4. Class Methods

h5. Moab::FileInventory.xml_filename
||Method||Return Type||Description||
|xml_filename|String|The standard name for the serialized inventory file of the given type|

||Parameter||Data Type||Description||
|type|String|Specifies the type of inventory, and thus the filename used for storage|
{code:lang=none|title=Ruby Source Code}
def self.xml_filename(type=nil)
  case type
    when "version"
      'versionInventory.xml'
    when "additions"
      'versionAdditions.xml'
    when "manifests"
      'manifestInventory.xml'
    when "directory"
      'directoryInventory.xml'
    else
      raise "unknown inventory type: #{type.to_s}"
  end
end{code}

h4. Instance Methods

h5. Moab::FileInventory#inventory_from_directory
||Method||Return Type||Description||
|inventory_from_directory|FileInventory|Traverse a directory and return an inventory of the files it contains|

||Parameter||Data Type||Description||
|data_dir|Pathname, String||
|group_id|String|if specified, is used to set the group ID of the FileGroup created from the directory if nil, then the directory is assumed to contain both content and metadata subdirectories|
{code:lang=none|title=Ruby Source Code}
def inventory_from_directory(data_dir,group_id=nil)
  if group_id
    @groups << FileGroup.new(:group_id=>group_id).group_from_directory(data_dir)
  else
    ['content','metadata'].each do |group_id|
      @groups << FileGroup.new(:group_id=>group_id).group_from_directory(Pathname(data_dir).join(group_id))
    end
  end
  self
end{code}

{code:lang=none|title=Usage Example}
require 'spec_helper'

feature "Harvest file properties from a file directory" do
  # In order to: automate the generation of a file inventory
  # The application needs to: traverse a directory tree and capture file metadata and checksums

  scenario "Generate content and metadata inventory for all files in a version's workspace directory" do
    # given: path to workspace directory
    # action: traverse the directory and capture file metadata
    # outcome: gnerate inventory containing two file groups

    data_dir_1 = @fixtures.join('data/jq937jp0017/v1/metadata')
    group_id = 'metadata'
    inventory_1 = FileInventory.new.inventory_from_directory(data_dir_1,group_id)
    inventory_1.groups.size.should == 1
    inventory_1.groups[0].group_id.should == group_id
    inventory_1.file_count.should == 5

    data_dir_2 = @fixtures.join('data/jq937jp0017/v1')
    inventory_2 = FileInventory.new.inventory_from_directory(data_dir_2)
    inventory_2.groups.size.should == 2
    inventory_2.groups[0].group_id.should == 'content'
    inventory_2.groups[1].group_id.should == 'metadata'
    inventory_2.file_count.should == 11
  end

end

{code}

h5. Moab::FileInventory#write_xml_file
||Method||Return Type||Description||
|write_xml_file|void|write the [#FileInventory] instance to a file|

||Parameter||Data Type||Description||
|parent_dir|Pathname, String|The parent directory in which the xml file is to be stored|
|type|String|The inventory type, which governs the filename used for serialization|
{code:lang=none|title=Ruby Source Code}
def write_xml_file(parent_dir, type=nil)
  type = @type if type.nil?
  self.class.write_xml_file(self, parent_dir, type)
end{code}

{code:lang=none|title=Usage Example}
require 'spec_helper'

feature "Feature: File Inventory Serialization" do
  # In order to: preserve the file inventory data held by an in-memory object
  # The application needs to: generate a xml file rendition of the metadata for disk storage

  scenario "should serialize file inventory data to XML" do
    # action: a call the object's write_xml_file method
    # outcome: produces a XML document containing all the inventory metadata

    inventory_object = FileInventory.read_xml_file(@manifests.join("v1"),'version')
    output_dir = @temp.join('inventory')
    output_dir.mkpath
    inventory_object.write_xml_file(output_dir,'version')
    inventory_pathname = output_dir.join('versionInventory.xml')
    inventory_pathname.read.should be_equivalent_to(<<EOF
    <?xml version="1.0" encoding="UTF-8"?>
    <fileInventory type="version" objectId="druid:jq937jp0017" versionId="1" inventoryDatetime="2012-04-19T12:12:47Z" fileCount="11" byteCount="229690" blockCount="228">
      <fileGroup groupId="content" dataSource="/Users/rnanders/Code/Ruby/moab-versioning/spec/fixtures/data/jq937jp0017/v1/content" fileCount="6" byteCount="206432" blockCount="203">
        <file>
          <fileSignature size="41981" md5="915c0305bf50c55143f1506295dc122c" sha1="60448956fbe069979fce6a6e55dba4ce1f915178"/>
          <fileInstance path="intro-1.jpg" datetime="2012-03-26T14:20:35Z"/>
        </file>
        <file>
          <fileSignature size="39850" md5="77f1a4efdcea6a476505df9b9fba82a7" sha1="a49ae3f3771d99ceea13ec825c9c2b73fc1a9915"/>
          <fileInstance path="intro-2.jpg" datetime="2012-03-26T14:19:30Z"/>
        </file>
        <file>
          <fileSignature size="25153" md5="3dee12fb4f1c28351c7482b76ff76ae4" sha1="906c1314f3ab344563acbbbe2c7930f08429e35b"/>
          <fileInstance path="page-1.jpg" datetime="2012-03-26T15:59:14Z"/>
        </file>
        <file>
          <fileSignature size="39450" md5="82fc107c88446a3119a51a8663d1e955" sha1="d0857baa307a2e9efff42467b5abd4e1cf40fcd5"/>
          <fileInstance path="page-2.jpg" datetime="2012-03-26T15:23:36Z"/>
        </file>
        <file>
          <fileSignature size="19125" md5="a5099878de7e2e064432d6df44ca8827" sha1="c0ccac433cf02a6cee89c14f9ba6072a184447a2"/>
          <fileInstance path="page-3.jpg" datetime="2012-03-26T15:24:39Z"/>
        </file>
        <file>
          <fileSignature size="40873" md5="1a726cd7963bd6d3ceb10a8c353ec166" sha1="583220e0572640abcd3ddd97393d224e8053a6ad"/>
          <fileInstance path="title.jpg" datetime="2012-03-26T14:15:11Z"/>
        </file>
      </fileGroup>
      <fileGroup groupId="metadata" dataSource="/Users/rnanders/Code/Ruby/moab-versioning/spec/fixtures/data/jq937jp0017/v1/metadata" fileCount="5" byteCount="23258" blockCount="25">
        <file>
          <fileSignature size="1619" md5="b886db0d14508884150a916089da840f" sha1="b2328faaf25caf037cfc0263896ad707fc3a47a7"/>
          <fileInstance path="contentMetadata.xml" datetime="2012-03-28T14:04:24Z"/>
        </file>
        <file>
          <fileSignature size="3046" md5="a60bb487db6a1ceb5e0b5bb3cae2dfa2" sha1="edefc0e1d7cffd5bd3c7db6a393ab7632b70dc2d"/>
          <fileInstance path="descMetadata.xml" datetime="2012-03-26T17:43:49Z"/>
        </file>
        <file>
          <fileSignature size="12903" md5="ccb5bf2ae0c2c6ad0b89692fa1e10145" sha1="3badb0d06aef40f14e4664d2594c6060b9e9716b"/>
          <fileInstance path="identityMetadata.xml" datetime="2012-03-26T17:44:48Z"/>
        </file>
        <file>
          <fileSignature size="5306" md5="17193dbf595571d728ba59aa31638db9" sha1="c8b91eacf9ad7532a42dc52b3c9cf03b4ad2c7f6"/>
          <fileInstance path="provenanceMetadata.xml" datetime="2012-03-26T17:46:44Z"/>
        </file>
        <file>
          <fileSignature size="384" md5="f16a2564fae2706a8c82cda6dccdb4d9" sha1="7aaf84f63a1db803d272352f03935d303f066560"/>
          <fileInstance path="versionMetadata.xml" datetime="2012-04-11T16:10:00Z"/>
        </file>
      </fileGroup>
    </fileInventory>

EOF
    )
    output_dir.rmtree
  end

end{code}

{anchor:FileGroup}
h3. Class Moab::FileGroup

h4. Description

A container for a standard subset of a digital objects [#FileManifestation] objects
Used to segregate depositor content from repository metadata files
This is a child element of [#FileInventory], which contains a full example



{anchor:FileManifestation}
h3. Class Moab::FileManifestation

h4. Description

A container for a file signature and all the physical file instances that have that signature
This element has one child [#FileSignature] element, and one or more [#FileInstance] elements
Regarding the class name, see
* [http://en.wikipedia.org/wiki/Functional_Requirements_for_Bibliographic_Records]
* [http://planets-project.eu/events/copenhagen-2009/pre-reading/docs/Modelling%20Organizational%20Preservation%20Goals_Angela%20Dappert.pdf]



{anchor:FileSignature}
h3. Class Moab::FileSignature

h4. Description

The fixity properties of a file, used to determine file content equivalence regardless of filename.



{anchor:FileInstance}
h3. Class Moab::FileInstance

h4. Description

The file path and last modification date properties of a file


